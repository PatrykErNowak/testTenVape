@use '../utilities/colors' as c;
@use '../utilities/breakpoints' as b;

.btn {
	padding: 0.8em 2.5em;
	display: inline-block;
	position: relative;
	font-family: inherit;
	color: c.$third;
	font-size: clamp(1.4rem, 1rem + 1.1vw, 1.6rem);
	font-weight: 600;
	text-align: center;
	text-transform: uppercase;
	text-shadow: 0 0 4px rgba(0, 0, 0, 0.6);
	border: none;
	letter-spacing: 2px;
	border-radius: 20px;

	&--primary {
		background-image: radial-gradient(100% 100% at 100% 0, #82ffa1 0, c.$main 100%);
		overflow: hidden;
		transition: transform 0.5s;
	
		&::before {
			content: '';
			position: absolute;
			top: -100%;
			left: 0;
			height: 20px;
			width: 100%;
			transform: translateX(-60%) rotate(-75deg);
			background-color: #f3f3f3;
			box-shadow: 0 0 10px #fff;
			filter: blur(1px);
			opacity: 0.9;
			transition: transform 0.5s;
		}
	
		&:hover {
			transform: scale(1.02);
		}
		&:hover::before {
			transform: translateX(70%) rotate(-75deg);
		}
	}
	&--confirm,
	&--denied {
		border: 1px solid rgba(255, 255, 255, 0.6);
        transition: background-color 0.3s, border 0.3s;
		&:hover {
			border: 1px solid transparent;
		}
	}

	&--confirm {
        &:hover {
            background-color: c.$btn-confirm;
        }
	}
	&--denied {
		&:hover {
            background-color: c.$btn-denied;
        }
	}
}

.btn-contact {
	color: c.$main;
		font-size: 2.5rem;
		transition: transform 0.3s;
		text-shadow: 0 0 10px rgba($color: c.$third, $alpha: 0.2);

		&:hover {
			transform: scale(1.2);
		}
		& :not(a) {
			padding: 0.5em;
		}
}


.btn__scroll-to-top {
	position: fixed;
	bottom: 15px;
	left: 15px;
	background-color: c.$main;
	height: 38px;
	width: 38px;
	font-size: 3rem;
	border-radius: 50%;
	z-index: 1000;
	opacity: 0;
	transition: background-color 0.3s, opacity 0.3s;
	pointer-events: none;

	svg {
		color: c.$third;
		transition: color 0.3s;
	}

	@media (min-width: b.$large) {
		bottom: 24px;
		right: 150px;
		left: unset;
		height: 44px;
		width: 44px;
	}

	
	&.active {
		opacity: 1;
		pointer-events: all;
		&:hover {
			background-color: c.$third;
			svg {
				color: c.$main;
			}
		}
	}
}